
** to do ** ( https://github.com/Farhaan10 )
1. Implement Weather forcast that changes wallpaper every day.
( see https://github.com/Farhaan10/Everyday_Wallpaper/blob/master/app/src/main/java/com/example/farhaan/everydaywallpaper/MainActivity.java ) for reference

*** to Learn : ***

1. Layout Params
2.


*****

***** Imp Points ****
1. view.getLayoutParams().getWidth() -> will be 0 in onCreate()  to get correct values do
  imgView.measure(
      MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED),
      MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));
  imgView.layout(0, 0,
      imgView.getMeasuredWidth(),
      imgView.getMeasuredHeight());

  ( or)

  ViewTreeObserver viewTree = imgView.getViewTreeObserver();
  viewTree.addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener() {
      public boolean onPreDraw() {
          finalHeight = imgView.getMeasuredHeight();
          finalWidth = imgView.getMeasuredWidth();
          //print or do some code
          return true;
      }
  });

( or )
final ViewTreeObserver vto = myView.getViewTreeObserver();
    if (vto.isAlive()) {
       vto.addOnGlobalLayoutListener(new OnGlobalLayoutListener() {
           public void onGlobalLayout() {
              int witdth = lColorWheel.getWith()
              // remove the listener... or we'll be doing this a lot.
              vto.removeOnGlobalLayoutListener(this);
          }
      });
   }

2. Difference between service and thread ?
A) 1. Service can restart
   2. Service has a context and that context is always valid  , Also u can export service to other application
3. Difference between singleton and static
A) "1. Singleton class follows OO principles. Eg can be inherited, polymorphism etc
   2. Singleton allocated memory only getinstance is called where as static allocates memory as soon as launch of app
4. Lifecycle of a thread
A. New - Runnable- Running - Blocked- Terminated
5. Why can you not create a new Activity() in android
A. Strong reference so on low memory the all the activities get killed
